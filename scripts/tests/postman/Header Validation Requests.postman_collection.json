{
	"info": {
		"_postman_id": "d2f48cf0-e995-4e93-a802-b9d8f9df80c1",
		"name": "Header Validation Requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Tpp uri compilance warning",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e875b7ad-3c8b-4f08-b713-0ab4ebb3dbbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to WARNING mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e875b7ad-3c8b-4f08-b713-0ab4ebb3dbbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": true,\n  \"tppUriComplianceResponse\": \"WARNING\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7611098-dd39-46aa-bdfa-e2280fb9dab2",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING exist\", () => {",
									"    pm.expect(jsonData).to.have.property('tppMessages');",
									"    const tppMessage = jsonData.tppMessages[0];",
									"    pm.expect(tppMessage.code).to.eql('WARNING');",
									"    pm.expect(tppMessage.text).to.eql('TPP URIs are not compliant with the domain secured by the eIDAS QWAC certificate of the TPP in the field CN or SubjectAltName of the certificate');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2691de1f-ad62-453d-94bc-a4c3d121f9fb",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7611098-dd39-46aa-bdfa-e2280fb9dab2",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2691de1f-ad62-453d-94bc-a4c3d121f9fb",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tpp uri compilance reject",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e875b7ad-3c8b-4f08-b713-0ab4ebb3dbbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to REJECT mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e875b7ad-3c8b-4f08-b713-0ab4ebb3dbbb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": true,\n   \"tppUriComplianceResponse\": \"REJECT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7611098-dd39-46aa-bdfa-e2280fb9dab2",
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Error code is FORMAT_ERROR\", () => {",
									"    const jsonData = pm.response.json();",
									"    const error = jsonData.tppMessages[0];",
									"    pm.expect(error.code).to.eql('FORMAT_ERROR');",
									"    pm.expect(error.text).to.eql('URIs don\\'t comply with domain from certificate');",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2691de1f-ad62-453d-94bc-a4c3d121f9fb",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f7611098-dd39-46aa-bdfa-e2280fb9dab2",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2691de1f-ad62-453d-94bc-a4c3d121f9fb",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tpp uri compilance reject when checkUriComplianceToDomainSupported off",
			"item": [
				{
					"name": "1. Set redirect SCA approach",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b558919-5f9a-46b8-8840-80a7ddafe7f8",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"REDIRECT\",\n  \"EMBEDDED\",\n  \"DECOUPLED\"\n]"
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/sca-approaches",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"sca-approaches"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Set tppUriComplianceResponse to REJECT and checkUriComplianceToDomainSupported false",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c1210a4-f1ff-4272-82e1-2520d66ea7ff",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ais\": {\n        \"consentTypes\": {\n            \"bankOfferedConsentSupported\": false,\n            \"globalConsentSupported\": false,\n            \"availableAccountsConsentSupported\": true,\n            \"accountAccessFrequencyPerDay\": 4,\n            \"notConfirmedConsentExpirationTimeMs\": 86400000,\n            \"maxConsentValidityDays\": 0\n        },\n        \"redirectLinkToOnlineBanking\": {\n            \"aisRedirectUrlToAspsp\": \"http://localhost:4200/ais/{redirect-id}/{encrypted-consent-id}\"\n        },\n        \"transactionParameters\": {\n            \"availableBookingStatuses\": [\n                \"BOOKED\",\n                \"PENDING\"\n            ],\n            \"transactionsWithoutBalancesSupported\": false,\n            \"supportedTransactionApplicationTypes\": [\n                \"application/json\"\n            ]\n        },\n        \"deltaReportSettings\": {\n            \"entryReferenceFromSupported\": false,\n            \"deltaListSupported\": false\n        },\n        \"scaRequirementsForOneTimeConsents\": {\n            \"scaByOneTimeAvailableAccountsConsentRequired\": true,\n            \"scaByOneTimeGlobalConsentRequired\": true\n        }\n    },\n    \"pis\": {\n        \"supportedPaymentTypeAndProductMatrix\": {\n            \"payments\": [\n                \"sepa-credit-transfers\",\n                \"instant-sepa-credit-transfers\"\n            ]\n        },\n        \"maxTransactionValidityDays\": 0,\n        \"notConfirmedPaymentExpirationTimeMs\": 86400000,\n        \"paymentCancellationAuthorisationMandated\": false,\n        \"redirectLinkToOnlineBanking\": {\n            \"pisRedirectUrlToAspsp\": \"http://localhost:4200/pis/{redirect-id}/{encrypted-payment-id}\",\n            \"pisPaymentCancellationRedirectUrlToAspsp\": \"http://localhost:4200/pis/cancellation/{redirect-id}/{encrypted-payment-id}\",\n            \"paymentCancellationRedirectUrlExpirationTimeMs\": 600000\n        },\n        \"countryValidationSupported\": \"DE\",\n        \"supportedTransactionStatusFormats\": [\n            \"application/json\"\n        ]\n    },\n    \"piis\": {\n        \"piisConsentSupported\": \"NOT_SUPPORTED\"\n    },\n    \"common\": {\n        \"scaRedirectFlow\": \"OAUTH\",\n        \"oauthConfigurationUrl\": \"http://localhost:4200/idp/\",\n        \"startAuthorisationMode\": \"auto\",\n        \"tppSignatureRequired\": false,\n        \"psuInInitialRequestMandated\": false,\n        \"redirectUrlExpirationTimeMs\": 600000,\n        \"authorisationExpirationTimeMs\": 86400000,\n        \"forceXs2aBaseLinksUrl\": false,\n        \"xs2aBaseLinksUrl\": \"http://myhost.com/\",\n        \"supportedAccountReferenceFields\": [\n            \"IBAN\"\n        ],\n        \"multicurrencyAccountLevelSupported\": \"SUBACCOUNT\",\n        \"aisPisSessionsSupported\": false,\n        \"signingBasketSupported\": false,\n        \"aspspNotificationsSupported\": [\n        \t\"NONE\"\t\n        ],\n          \t\"authorisationConfirmationRequestMandated\": false,\n    \t\"authorisationConfirmationCheckByXs2a\": false, \n  \"checkUriComplianceToDomainSupported\": false,\n   \"tppUriComplianceResponse\": \"REJECT\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{url_aspsp_profile}}/api/v1/aspsp-profile/for-debug/aspsp-settings",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_aspsp_profile}}"
							],
							"path": [
								"api",
								"v1",
								"aspsp-profile",
								"for-debug",
								"aspsp-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Payment initiation request invalid uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3efcee17-5361-4c2e-81d4-1e72e5d9a179",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "84d7fb9d-0a3a-4974-84ff-78f0253b20fe",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_single}}",
								"type": "text"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}",
								"type": "text"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"value": "true",
								"type": "text"
							},
							{
								"key": "TPP-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----",
								"type": "text"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.fluriko.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Payment initiation request uris",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cf7fe01-0fd9-4704-b793-df19086f79f5",
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Transcation status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"pm.test(\"Links exist\", () => {",
									"    pm.expect(jsonData).to.have.property('_links');",
									"    const _links = jsonData._links;",
									"    ",
									"    pm.expect(_links).to.have.property('self');",
									"    pm.expect(_links).to.have.property('status');",
									"    pm.expect(_links).to.have.property('scaOAuth');",
									"});",
									"",
									"pm.test(\"Payment ID exists\", () => {",
									"    pm.expect(jsonData).to.have.property('paymentId');",
									"});",
									"",
									"const parts = jsonData._links.scaStatus.href.split('/');",
									"const authorisationId = parts[ parts.length - 1 ];",
									"",
									"pm.globals.set(\"payment_id\", jsonData.paymentId);",
									"pm.globals.set(\"authorisation_id\", authorisationId);",
									"",
									"pm.test(\"WARNING not exist\", () => {",
									"    pm.expect(jsonData).to.not.have.property('tppMessages');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "73d729c7-bb09-460f-b861-aa5c25258052",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_single}}"
							},
							{
								"key": "PSU-IP-Address",
								"type": "text",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"type": "text",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "TPP-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "TPP-Nok-Redirect-URI",
								"type": "text",
								"value": "http://live.finapi.io"
							},
							{
								"key": "tpp-qwac-certificate",
								"type": "text",
								"value": "-----BEGIN CERTIFICATE-----MIIJUzCCBzugAwIBAgIJA904nvlqSG59MA0GCSqGSIb3DQEBCwUAMHoxCzAJBgNVBAYTAkNaMSMwIQYDVQQDDBpJLkNBIFNTTCBFViBDQS9SU0EgMTAvMjAxNzEtMCsGA1UECgwkUHJ2bsOtIGNlcnRpZmlrYcSNbsOtIGF1dG9yaXRhLCBhLnMuMRcwFQYDVQRhDA5OVFJDWi0yNjQzOTM5NTAeFw0xOTA3MDIwNzIzNDNaFw0yMDA3MDEwNzIzNDNaMIH0MRcwFQYDVQQDDA5saXZlLmZpbmFwaS5pbzESMBAGA1UEBRMJSFJCMTc1MjUwMQ8wDQYDVQQHDAZNdW5pY2gxEDAOBgNVBAgMB0JhdmFyaWExCzAJBgNVBAYTAkRFMRQwEgYDVQQKDAtmaW5BUEkgR21iSDEeMBwGA1UECQwVQWRhbXMtTGVobWFubi1TdHIuIDQ0MQ4wDAYDVQQRDAU4MDc5NzEbMBkGA1UEYQwSUFNEREUtQkFGSU4tMTUxNTQ4MR0wGwYDVQQPDBRQcml2YXRlIE9yZ2FuaXphdGlvbjETMBEGCysGAQQBgjc8AgEDEwJERTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKQyPpQ1WWMpiO4F0bzwCWNWHmuILojo+zF/kmMmUdSkwucvuKadERypgLmNEZLjCw96M/zye9kEGeX3nyMxgaUfkFLuDNOL5N4tlCPLsEAakrHs3Q/oJRYdMYRgJKg9CX6wP4EAPiRy2bqPYmKzd/N1Qc2cs7G6cB/MU/NKMxdEs3FbMM4v5VkuvNqBr1dRUJOUsLBN7+cagejUTgVizlxbtrO0fzz/4ivvIHH6MUcQKOrCL1/s2Ygv3T4WXinro/qOYd+phJVR5FlwDcjkIyj16DmUHAA7JeMSm1045fxvVupPR8mmd/GvwGv+k2KpTYywjcIz8hv2/dg2E6vGP1kCAwEAAaOCBF8wggRbMIG7BgNVHREEgbMwgbCCDmxpdmUuZmluYXBpLmlvghBwMTIxNDMuZmluYXBpLmlvghBwMTIwOTAuZmluYXBpLmlvghFzYW5kYm94LmZpbmFwaS5pb4IPYXdzMDEuZmluYXBpLmlvgg9hbHBoYS5maW5hcGkuaW+CEmF3cy10ZXN0LmZpbmFwaS5pb4INZGV2LmZpbmFwaS5pb4IQdDEyMTQzLmZpbmFwaS5pb4IQdDEyMDkwLmZpbmFwaS5pbzAJBgNVHRMEAjAAMIIBOQYDVR0gBIIBMDCCASwwggEdBg0rBgEEAYG4SAoBKAEAMIIBCjAdBggrBgEFBQcCARYRaHR0cDovL3d3dy5pY2EuY3owgegGCCsGAQUFBwICMIHbGoHYVGVudG8ga3ZhbGlmaWtvdmFueSBjZXJ0aWZpa2F0IHBybyBhdXRlbnRpemFjaSBpbnRlcm5ldG92eWNoIHN0cmFuZWsgYnlsIHZ5ZGFuIHYgc291bGFkdSBzIG5hcml6ZW5pbSBFVSBjLiA5MTAvMjAxNC5UaGlzIGlzIGEgcXVhbGlmaWVkIGNlcnRpZmljYXRlIGZvciB3ZWJzaXRlIGF1dGhlbnRpY2F0aW9uIGFjY29yZGluZyB0byBSZWd1bGF0aW9uIChFVSkgTm8gOTEwLzIwMTQuMAkGBwQAi+xAAQQwgYwGA1UdHwSBhDCBgTApoCegJYYjaHR0cDovL3FjcmxkcDEuaWNhLmN6L3FjdzE3X3JzYS5jcmwwKaAnoCWGI2h0dHA6Ly9xY3JsZHAyLmljYS5jei9xY3cxN19yc2EuY3JsMCmgJ6AlhiNodHRwOi8vcWNybGRwMy5pY2EuY3ovcWN3MTdfcnNhLmNybDBjBggrBgEFBQcBAQRXMFUwKQYIKwYBBQUHMAKGHWh0dHA6Ly9xLmljYS5jei9xY3cxN19yc2EuY2VyMCgGCCsGAQUFBzABhhxodHRwOi8vb2NzcC5pY2EuY3ovcWN3MTdfcnNhMA4GA1UdDwEB/wQEAwIFoDCB7wYIKwYBBQUHAQMEgeIwgd8wCAYGBACORgEBMBMGBgQAjkYBBjAJBgcEAI5GAQYDMFcGBgQAjkYBBTBNMC0WJ2h0dHBzOi8vd3d3LmljYS5jei9acHJhdnktcHJvLXV6aXZhdGVsZRMCY3MwHBYWaHR0cHM6Ly93d3cuaWNhLmN6L1BEUxMCZW4wZQYGBACBmCcCMFswJjARBgcEAIGYJwECDAZQU1BfUEkwEQYHBACBmCcBAwwGUFNQX0FJDCdGZWRlcmFsIEZpbmFuY2lhbCBTdXBlcnZpc29yeSBBdXRob3JpdHkMCERFLUJBRklOMB8GA1UdIwQYMBaAFD2vGQiXehCMvCjBRm2XSFpI/ALKMB0GA1UdDgQWBBSRmzUFeytrguMmaXIVe+68qOv/ETAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggIBAJ+sS5HO8M7L+YyGx/EoqVIBEm/Krm6UtcSJXMOKeKRoseoT6AYlYLm79hKGx/eEk2kHLcVmbcstCok71CN+bmMQ5nzz8ne0qOIlDDRTh1jTnoknqBigrrc5pJw3WXIoXt3CtBVc1MRvJf+k8rrAdybSt+GyLF6maV6rt7PX9oMxO+dCMNqsKqFsZeRUELw580UJng3x2ZBA1lyxth4RUWzC/dRmmPXRV6YS0vpw86BvgoVBdVh/Jq/x9veKRkOl0Hpy6uXUzuPK1oeDemwMXMYln3q3BmYLekWSiY4ojDrxWTm1MCldbqk76wN/DSgEIdnIkTew91yQJjqIEth1+YkP8Br6IigQfmUrol7GiDKhRtxslhC60/UencKG0jMGEkKvzhobAALFvW+qcSHCIMN/g/fdTjXkbuS1C/RyXQQ3F7EmsZOYkiRYkkAC5mAbpymjxinP9y+ULfpoDFxea8uSEHBcYrxn5wyGdWfVJgeXxu5ObFHTBOES+7KocZXz/xXgBa1dnIIuxg9AxAR2wnwUazqmPC097GX3TjUaLASnyocReRt1dqkl5/w5aZsgd2kxKbrlLVt+nCDg1JT6CWXDM5nJiRpK7ObKoGnY96ldwQky10VD5Z8VskJXThd9jMcv3iwm1oZYvf6BheKtMdDdsBlBHALnm+O4I+ovPl5o-----END CERTIFICATE-----"
							},
							{
								"key": "TPP-Notification-URI",
								"value": "http://live.finapi.io",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"endToEndIdentification\": \"WBG-123456789\",\n    \"debtorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"instructedAmount\": {\n      \"currency\": \"EUR\",\n      \"amount\": \"0.01\"\n    },\n    \"creditorAccount\": {\n      \"currency\": \"EUR\",\n      \"iban\": \"{{iban_single}}\"\n    },\n    \"creditorAgent\" : \"AAAADEBBXXX\",\n    \"creditorName\": \"WBG\",\n    \"creditorAddress\": {\n      \"buildingNumber\": \"56\",\n      \"townName\": \"Nürnberg\",\n      \"country\": \"DE\",\n      \"postCode\": \"90543\",\n      \"streetName\": \"WBG Straße\"\n    },\n    \"remittanceInformationUnstructured\": \"Ref. Number WBG-1222\"\n  }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}